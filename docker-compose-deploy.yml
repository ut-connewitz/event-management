version: '3.7'

services:
  db:
    container_name: events_db
    image: postgres:16.3
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=GMT+2
      - PGTZ=GMT+2      

  app:
    container_name: events
    build:
      context: .
      dockerfile: Dockerfile_app_deploy
    volumes:
      - static_data:/vol/web
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db

  nginx:
    container_name: events_nginx
    build:
      context: ./nginx
    volumes:
      - static_data:/vol/static
    ports:
      - "8080:8080"
    depends_on:
      - app

  rabbitmq:
    container_name: events_rabbit
    hostname: rabbit_host
    build:
      context: ./rabbitmq
      dockerfile: ./rabbitmq/Dockerfile_deploy
    ports:
            - 5672:5672    #amqp
            - 15672:15672  #http
            - 15692:15692  #prometheus

  celery_worker:
    container_name: events_celery_worker
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_celery
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - events
      - rabbitmq
      - db

  celery_beat:
    container_name: events_celery_beat
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_celery_beat
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - events
      - rabbitmq
      - db

volumes:
  static_data:
