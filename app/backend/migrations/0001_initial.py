# Generated by Django 4.2 on 2024-01-26 14:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Act',
            fields=[
                ('act_name', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('person_count', models.PositiveIntegerField()),
                ('act_image', models.ImageField(upload_to='')),
                ('music_sample', models.FileField(upload_to='')),
                ('diet', models.CharField(max_length=100)),
                ('act_email', models.EmailField(max_length=100)),
                ('act_phone', models.CharField(max_length=15)),
            ],
            options={
                'verbose_name': 'Band',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('Kino', 'Cinema'), ('Konzert', 'Concert'), ('Theater', 'Play'), ('Festival', 'Festival'), ('Sonstiges', 'Other')], default='Sonstiges', max_length=10)),
                ('event_description', models.TextField()),
                ('event_press', models.TextField()),
                ('event_fee', models.DecimalField(decimal_places=2, max_digits=4)),
                ('event_image', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'Veranstaltung',
                'verbose_name_plural': 'Veranstaltungen',
            },
        ),
        migrations.CreateModel(
            name='EventDay',
            fields=[
                ('event_day_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('admission_time', models.DateTimeField()),
                ('event_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.event')),
            ],
            options={
                'verbose_name': 'Veranstaltungstag',
                'verbose_name_plural': 'Veranstaltungstage',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('Aufgabenbenachrichtigung', 'Task Notification'), ('Dienstbenachrichtigung', 'Volunteering Notification'), ('Benachrichtigung', 'Misc Notification')], default='Benachrichtigung', max_length=30)),
                ('comment', models.TextField()),
                ('timer', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Benachrichtigung',
                'verbose_name_plural': 'Benachrichtigungen',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_type', models.CharField(choices=[('Einlass', 'Admission'), ('Tontechnik', 'Sound'), ('Lichttechnik', 'Light'), ('Küche', 'Kitchen'), ('Sonstiges', 'Other')], default='Sonstiges', max_length=15)),
                ('team_restriction', models.CharField(choices=[('Tontechnik', 'Sound'), ('Lichttechnik', 'Light'), ('Verwaltung', 'Office'), ('Ohne', 'None')], default='Ohne', max_length=15)),
                ('urgency', models.CharField(choices=[('Dringend', 'Urgent'), ('Wichtig', 'Important'), ('Mittel', 'Medium'), ('Niedrig', 'Low')], default='Mittel', max_length=15)),
                ('state', models.CharField(choices=[('Offen', 'Free'), ('Übernommen', 'Taken'), ('Vielleicht', 'Maybe'), ('Erledigt', 'Done')], default='Offen', max_length=15)),
                ('start_time', models.DateTimeField()),
                ('finish_time', models.DateTimeField()),
                ('comment', models.TextField()),
                ('event_day_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.eventday')),
            ],
            options={
                'verbose_name': 'Aufgabe',
                'verbose_name_plural': 'Aufgaben',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_name', models.CharField(max_length=40, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Team',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=40)),
                ('surname', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Personen',
            },
        ),
        migrations.CreateModel(
            name='UTMember',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.user')),
                ('member_number', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Mitglied',
            },
            bases=('backend.user',),
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.user')),
                ('volunteering_count', models.PositiveIntegerField()),
            ],
            bases=('backend.user',),
        ),
        migrations.CreateModel(
            name='Volunteering',
            fields=[
                ('volunteering_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('confirmation_type', models.CharField(choices=[('Nicht', 'Not'), ('Sicher', 'Certain'), ('Vielleicht', 'Maybe')], default='Nicht', max_length=15)),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.task')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user')),
            ],
            options={
                'verbose_name': 'Dienst',
                'verbose_name_plural': 'Dienste',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('team_member_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('team_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.team')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user')),
            ],
            options={
                'verbose_name': 'Team Member',
            },
        ),
        migrations.CreateModel(
            name='EventAct',
            fields=[
                ('event_act_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('act_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.act')),
                ('event_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.eventday')),
            ],
            options={
                'verbose_name': 'Auftritt',
                'verbose_name_plural': 'Auftritte',
            },
        ),
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=40)),
                ('house_number', models.CharField(max_length=40)),
                ('postal_code', models.CharField(max_length=40)),
                ('country', models.CharField(max_length=40)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user')),
            ],
            options={
                'verbose_name': 'Adresse',
            },
        ),
        migrations.CreateModel(
            name='VolunteeringNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.notification')),
                ('volunteering_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.volunteering')),
            ],
            bases=('backend.notification',),
        ),
        migrations.CreateModel(
            name='TaskNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='backend.notification')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.task')),
            ],
            bases=('backend.notification',),
        ),
    ]
