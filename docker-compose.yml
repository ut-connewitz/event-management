version: '3.7'

services:
  db:
    container_name: events_db
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  events:
    container_name: events
    build: .
    command: >
      sh -cx "python manage.py runserver 0.0.0.0:8000 &&
              echo "*** going to sleep ***" &&
              sleep 60s &&
              echo "*** docker compose celery starup ***" &&
              celery -A events beat -l debug &&
              celery -A events worker -l info"
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - ALLOWED_HOSTS=0.0.0.0
    depends_on:
      - db
      - rabbitmq

  rabbitmq:
    container_name: events_rabbit
    hostname: rabbit_host
    build:
      context: ./rabbitmq
    #volumes:
    #    - ./etc/rabbitmq/conf:/etc/rabbitmq/
    #    - ./etc/rabbitmq/data/:/var/lib/rabbitmq/
    #    - ./etc/rabbitmq/logs/:/var/log/rabbitmq/
    #    - ./rabbit_enabled_plugins:/etc/rabbitmq/rabbit_enabled_plugins
    environment:
            - RABBITMQ_ERLANG_COOKIE=test

    ports:
            - 5672:5672    #amqp
            - 15672:15672  #http
            - 15692:15692  #prometheus

    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 20s
      retries: 5

#    networks:
#      - events_network

#networks:
#  events_network: {}
